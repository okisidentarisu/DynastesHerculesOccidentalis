{"ast":null,"code":"var _jsxFileName = \"/home/yutodama/Rippro/reactSample/3d-shader/src/Scene.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Box(props) {\n  _s();\n  const mesh = useRef();\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n  useFrame((state, delta) => mesh.current.rotation.x += delta);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ...props,\n    ref: mesh,\n    scale: active ? 1.5 : 1,\n    castShadow: true,\n    onClick: event => setActive(!active),\n    onPointerOver: event => setHover(true),\n    onPointerOut: event => setHover(false),\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: hovered ? \"hotpink\" : \"orange\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(Box, \"Gf95ovYMxCkb+HRFcD1+zMTFs6g=\", false, function () {\n  return [useFrame];\n});\n_c = Box;\nexport const Scene = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10],\n      castShadow: true\n      //shadow-mapSize-width={2048}\n      //shadow-mapSize-height={2048}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      position: [-1.2, 0, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      position: [1.2, 0, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = Scene;\nvar _c, _c2;\n$RefreshReg$(_c, \"Box\");\n$RefreshReg$(_c2, \"Scene\");","map":{"version":3,"names":["useRef","useState","useFrame","jsxDEV","_jsxDEV","Fragment","_Fragment","Box","props","_s","mesh","hovered","setHover","active","setActive","state","delta","current","rotation","x","ref","scale","castShadow","onClick","event","onPointerOver","onPointerOut","children","args","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","Scene","intensity","position","_c2","$RefreshReg$"],"sources":["/home/yutodama/Rippro/reactSample/3d-shader/src/Scene.jsx"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\n\nfunction Box(props) {\n  const mesh = useRef();\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n  useFrame((state, delta) => (mesh.current.rotation.x += delta));\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? 1.5 : 1}\n      castShadow\n      onClick={(event) => setActive(!active)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}\n    >\n      <boxGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hovered ? \"hotpink\" : \"orange\"} />)\n    </mesh>\n  );\n}\n\nexport const Scene = () => {\n  return (\n    <>\n      <ambientLight intensity={0.1} />\n      <pointLight\n        position={[10, 10, 10]}\n        castShadow\n        //shadow-mapSize-width={2048}\n        //shadow-mapSize-height={2048}\n      />\n      <Box position={[-1.2, 0, 0]} />\n      <Box position={[1.2, 0, 0]} />\n    </>\n  );\n};\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGV,MAAM,EAAE;EACrB,MAAM,CAACW,OAAO,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3CC,QAAQ,CAAC,CAACa,KAAK,EAAEC,KAAK,KAAMN,IAAI,CAACO,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAIH,KAAM,CAAC;EAE9D,oBACEZ,OAAA;IAAA,GACMI,KAAK;IACTY,GAAG,EAAEV,IAAK;IACVW,KAAK,EAAER,MAAM,GAAG,GAAG,GAAG,CAAE;IACxBS,UAAU;IACVC,OAAO,EAAGC,KAAK,IAAKV,SAAS,CAAC,CAACD,MAAM,CAAE;IACvCY,aAAa,EAAGD,KAAK,IAAKZ,QAAQ,CAAC,IAAI,CAAE;IACzCc,YAAY,EAAGF,KAAK,IAAKZ,QAAQ,CAAC,KAAK,CAAE;IAAAe,QAAA,gBAEzCvB,OAAA;MAAawB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChC5B,OAAA;MAAsB6B,KAAK,EAAEtB,OAAO,GAAG,SAAS,GAAG;IAAS;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,KACjE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AAEX;AAACvB,EAAA,CApBQF,GAAG;EAAA,QAIVL,QAAQ;AAAA;AAAAgC,EAAA,GAJD3B,GAAG;AAsBZ,OAAO,MAAM4B,KAAK,GAAGA,CAAA,KAAM;EACzB,oBACE/B,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACEvB,OAAA;MAAcgC,SAAS,EAAE;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChC5B,OAAA;MACEiC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE;MACvBf,UAAU;MACV;MACA;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA,eACF5B,OAAA,CAACG,GAAG;MAAC8B,QAAQ,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC/B5B,OAAA,CAACG,GAAG;MAAC8B,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBAC7B;AAEP,CAAC;AAACM,GAAA,GAdWH,KAAK;AAAA,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}